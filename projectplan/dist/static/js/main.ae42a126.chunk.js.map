{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initial","SignedOuyLinks","state","console","log","firebase","links","uid","SignedOutLinks","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","undefined","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","userProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ae42a126.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initial}</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' })\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err })\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' });\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initial: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOuyLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/signup'>Signup</NavLink></li>\n      <li><NavLink to='/signin'>Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOuyLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\n  return (\n    <nav className=\"nav-wrapper grey bg-darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">ProjectPlan</Link>\n        { auth.isLoaded && links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);"," import React from 'react';\n import moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-2\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notification</span>\n          <ul className=\"notifications\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user}</span>\n                  <span> {item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    { moment(item.time.toDate()).fromNow() }\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-2 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n};\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList;"," import React, { Component } from 'react';\n import Notifications from './Notifications';\n import ProjectList from '../projects/ProjectList';\n import { connect } from 'react-redux';\n import { firestoreConnect } from 'react-redux-firebase';\n import { compose } from 'redux';\n import { Redirect } from 'react-router-dom';\n\n class Dashboard extends Component {\n   render () {\n     console.log(this.props)\n     const { project, auth, notifications } = this.props;\n     if (!auth.uid) return < Redirect to='/signin'/>\n     return (\n       <div className=\"dashboard container\">\n         <div className=\"row\">\n           <div className=\"col s12 m6\">\n             <ProjectList projects={ project }/>\n           </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={ notifications }/>\n          </div> \n         </div>\n       </div>\n     )\n   }\n };\n\n const mapStateTpProps = (state) => {\n   //console.log(state);\n   return {\n     project: state.firestore.ordered.projects,\n     auth: state.firebase.auth,\n     notifications: state.firestore.ordered.notifications\n   }\n }\n\nexport default compose(\n  connect(mapStateTpProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard);","import React from 'react'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  //console.log(props);\n  const { project, auth } = props;\n  if (!auth.uid) return < Redirect to='/signin'/>\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card depth-2\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{ project.title }</span>\n            <p>{ project.content }</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n          <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n          <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p> Loading...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : undefined;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return < Redirect to='/'/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-fiel\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '' \n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return < Redirect to='/'/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-fiel\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return < Redirect to='/signin'/>\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-fiel\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, dispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make some async DB call\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    console.log(profile);\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project})\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err})\n    })\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","const initState = {\n  projects: [\n    {id: 1, title: 'my first project', content: 'this is story of my pony'},\n    {id: 2, title: 'my second project', content: 'story of my little pony'},\n    {id: 3, title: 'my third project', content: 'this is what you told me'}\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err);\n      return state; \n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers} from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDC69z8-2J_dxTp8mg_ZXFsqDIbdUZpLfM\",\n  authDomain: \"project-plan-8bc27.firebaseapp.com\",\n  databaseURL: \"https://project-plan-8bc27.firebaseio.com\",\n  projectId: \"project-plan-8bc27\",\n  storageBucket: \"project-plan-8bc27.appspot.com\",\n  messagingSenderId: \"54471600318\",\n  appId: \"1:54471600318:web:5598287eeefe50e70716ef\",\n  measurementId: \"G-YM6HR4CEPT\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\nfirebase.firestore();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst profileSpecificProps = {\n  useFirestoreForProfile: true,\n  userProfile: 'users',\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n          <App />\n      </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}